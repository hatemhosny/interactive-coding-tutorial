{
  "title": "Interactive Tutorial",
  "description": "",
  "tags": [],
  "activeEditor": "markup",
  "markup": {
    "language": "html",
    "content": "<!doctype html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>LiveCodes Tutorial Demo</title>\r\n    <style>\r\n      body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        font: 0.9em sans-serif;\r\n        justify-content: center;\r\n        margin: 10px 10%;\r\n      }\r\n      h1 {\r\n        text-align: center;\r\n        font-size: 1.5em;\r\n        color: rgb(72, 72, 72);\r\n      }\r\n      #container {\r\n        height: 60vh;\r\n        margin: auto;\r\n      }\r\n      #controls {\r\n        list-style: none;\r\n        display: flex;\r\n        gap: 1em;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        max-width: 100%;\r\n        margin: 1em;\r\n        padding: 0;\r\n      }\r\n      #controls button {\r\n        width: 15em;\r\n        height: 2em;\r\n        background-color: rgb(243, 243, 243);\r\n        border: 1px solid grey;\r\n        border-radius: 2px;\r\n        cursor: pointer;\r\n        color: darkslategrey;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n      #result {\r\n        margin: 1em;\r\n        text-align: center;\r\n      }\r\n      #result.success {\r\n        color: green;\r\n      }\r\n      #result.fail {\r\n        color: red;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div id=\"container\"></div>\r\n    <div id=\"controls\">\r\n      <button id=\"next\">Start Tutorial</button>\r\n      <button id=\"test\">Check My Solution</button>\r\n    </div>\r\n    <div id=\"result\"></div>\r\n    <script type=\"module\">\r\n      import { createPlayground } from 'https://unpkg.com/livecodes@0.1.2';\r\n\r\n      const steps = [\r\n        {\r\n          btnText: 'Next',\r\n          panel: 'markup',\r\n          position: { line: 2, column: 20 },\r\n          config: {\r\n            markup: {\r\n              language: 'html',\r\n              content: '<h1>Hello,\\n  <span id=\"title\">World</span>!\\n</h1>',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          btnText: 'Next',\r\n          panel: 'style',\r\n          position: { line: 2, column: 10 },\r\n          config: {\r\n            style: {\r\n              language: 'css',\r\n              content: '#title {\\n  color: blue;\\n}',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          btnText: 'Next',\r\n          panel: 'script',\r\n          position: { line: 2, column: 19 },\r\n          config: {\r\n            script: {\r\n              language: 'javascript',\r\n              content:\r\n                '// change this value to \"LiveCodes\"\\nconst newTitle = \"???\";\\ndocument.querySelector(\"#title\").textContent = newTitle;\\nconsole.log(newTitle);',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          btnText: 'Final Result',\r\n          panel: 'console',\r\n        },\r\n        {\r\n          btnText: 'Restart Tutorial',\r\n          panel: 'result',\r\n        },\r\n      ];\r\n\r\n      const options = {\r\n        appUrl: 'https://v10.livecodes.io/',\r\n        loading: 'eager',\r\n        config: {\r\n          markup: {\r\n            language: 'html',\r\n            content: 'Welcome to the tutorial!<br>Start by clicking the button below.',\r\n          },\r\n          tests: {\r\n            language: 'javascript',\r\n            content:\r\n              'import { screen } from \"@testing-library/dom\";\\nimport \"@testing-library/jest-dom\";\\n\\ntest(\"Should display title\", async () => {\\n  expect(screen.getByText(\"Hello\", { exact: false })).toHaveTextContent(\\n    \"Hello, LiveCodes!\"\\n  );\\n});\\n\\ntest(\"Title should be blue\", async () => {\\n  const style = window.getComputedStyle(document.querySelector(\"#title\"));\\n  expect(style.color).toBe(\"rgb(0, 0, 255)\");\\n});',\r\n          },\r\n        },\r\n      };\r\n\r\n      createPlayground('#container', options).then((playground) => {\r\n        let step = 0;\r\n        const nextBtn = document.querySelector('#next');\r\n        const testsBtn = document.querySelector('#test');\r\n        const testResult = document.querySelector('#result');\r\n\r\n        nextBtn.addEventListener('click', async () => {\r\n          const lastStep = steps.length - 1;\r\n          const currentStep = steps[step];\r\n          const prevConfig = step === 0 ? options.config : await playground.getConfig();\r\n\r\n          await playground.setConfig({ ...prevConfig, ...currentStep.config });\r\n          await playground.show(currentStep.panel, currentStep.position);\r\n\r\n          nextBtn.textContent = currentStep.btnText;\r\n          step = step < lastStep ? step + 1 : 0;\r\n        });\r\n\r\n        testsBtn.addEventListener('click', async () => {\r\n          testResult.textContent = 'Checking your solution...';\r\n          testResult.classList.remove('success');\r\n          testResult.classList.remove('fail');\r\n\r\n          const { results } = await playground.runTests();\r\n          if (results.some((result) => result.status === 'fail')) {\r\n            testResult.textContent = 'Wrong answer, try again!';\r\n            testResult.classList.add('fail');\r\n            testResult.classList.remove('success');\r\n          } else {\r\n            testResult.textContent = 'Correct answer, well done!';\r\n            testResult.classList.add('success');\r\n            testResult.classList.remove('fail');\r\n          }\r\n        });\r\n      });\r\n    </script>\r\n  </body>\r\n</html>"
  },
  "style": {
    "language": "css",
    "content": ""
  },
  "script": {
    "language": "javascript",
    "content": ""
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "processors": [],
  "customSettings": {},
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "version": "14"
}